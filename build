#!/bin/bash

set -Ee
onerror() {
    echo "Fail to execute: $0 $@ ($?)"
    exit 1
}
# exit 1 on error
trap onerror ERR

pull() {
    image=$1
    if [ -z "$image" ]; then exit 1; fi
    repo=$DOCKER_USERNAME/$image
    docker pull $repo
    docker tag  $repo  $image
    docker rmi  $repo
}

build() {
    image=$1
    docker build -t $image ./$image
}

push() {
    image=$1
    repo=$DOCKER_USERNAME/$image
    docker tag  $image  $repo
    docker push         $repo
}

easy() {
    # start timer
    # @see: https://unix.stackexchange.com/a/354456/244069
    SECONDS=0

    build base
    build util
    build nginx
    build sqlite
    build python
    build bind

    docker images

    # stop timer
    timer_msg=
    if (( $SECONDS > 3600 )) ; then
        let "hours=SECONDS/3600"
        let "minutes=(SECONDS%3600)/60"
        let "seconds=(SECONDS%3600)%60"
        timer_msg="Completed in $hours hour(s), $minutes minute(s) and $seconds second(s)"
    elif (( $SECONDS > 60 )) ; then
        let "minutes=(SECONDS%3600)/60"
        let "seconds=(SECONDS%3600)%60"
        timer_msg="Completed in $minutes minute(s) and $seconds second(s)"
    else
        timer_msg="Completed in $SECONDS seconds"
    fi

    read -p "Do you want to push newly built images? (Y/n) " do_push_images
    if [ "$do_push_images" == "Y" ] || [ "$do_push_images" == "y" ]; then
        if [ -z "$DOCKER_USERNAME" ]; then
            # no username is provided
            read -s -p "Please input username: " DOCKER_USERNAME
            echo
        fi
        if [ -z "$DOCKER_PASSWORD" ]; then
            # no password is provided
            read -s -p "Please input password: " DOCKER_PASSWORD
            echo
        fi

        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

        docker tag nginx $DOCKER_USERNAME/nginx && \
            docker push $DOCKER_USERNAME/nginx
        docker tag sqlite $DOCKER_USERNAME/sqlite && \
            docker push $DOCKER_USERNAME/sqlite
        docker tag python $DOCKER_USERNAME/python && \
            docker push $DOCKER_USERNAME/python
        docker tag bind $DOCKER_USERNAME/bind && \
            docker push $DOCKER_USERNAME/bind

        docker logout
    fi

    echo "$timer_msg"
}

clean() {
    CONTAINERS=$(docker ps -qa)
    [ -n "$CONTAINERS" ] && docker rm -f $CONTAINERS
    IMAGES=$(docker images --format "{{.Repository}}:{{.ID}}" | sed '/^ubuntu/d' | cut -d: -f2)
    [ -n "$IMAGES" ] && docker rmi -f $IMAGES
}

case "$1" in
    easy)
    easy
    ;;

    clean)
    clean
    ;;

    *)
    echo "Usage: $0 easy"
    echo "       $0 clean"
    exit 1
    ;;
esac

exit 0
